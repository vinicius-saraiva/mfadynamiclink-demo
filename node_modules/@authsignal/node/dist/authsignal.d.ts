import { AuthsignalConstructor, ChallengeRequest, ChallengeResponse, DeleteAuthenticatorRequest, DeleteAuthenticatorResponse, EnrollVerifiedAuthenticatorRequest, EnrollVerifiedAuthenticatorResponse, GetActionRequest, GetActionResponse, TrackRequest, TrackResponse, UpdateUserRequest, UserAuthenticator, UserRequest, UserResponse, ValidateChallengeRequest, ValidateChallengeResponse } from "./types";
export declare const DEFAULT_API_BASE_URL = "https://api.authsignal.com/v1";
export declare class Authsignal {
    secret: string;
    apiBaseUrl: string;
    redirectUrl?: string;
    constructor({ secret, apiBaseUrl, redirectUrl }: AuthsignalConstructor);
    getUser(request: UserRequest): Promise<UserResponse>;
    updateUser(request: UpdateUserRequest): Promise<UserResponse>;
    getAuthenticators(request: UserRequest): Promise<UserAuthenticator[]>;
    getChallenge(request: ChallengeRequest): Promise<ChallengeResponse>;
    track(request: TrackRequest): Promise<TrackResponse>;
    getAction(request: GetActionRequest): Promise<GetActionResponse | undefined>;
    enrollVerifiedAuthenticator(request: EnrollVerifiedAuthenticatorRequest): Promise<EnrollVerifiedAuthenticatorResponse>;
    deleteAuthenticator(request: DeleteAuthenticatorRequest): Promise<DeleteAuthenticatorResponse>;
    validateChallenge(request: ValidateChallengeRequest): Promise<ValidateChallengeResponse>;
    private getBasicAuthConfig;
}
